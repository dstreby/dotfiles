# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Source bash functions
if [ -f "${HOME}/dotfiles/bash/bash_functions" ]; then
    source "${HOME}/dotfiles/bash/bash_functions"
fi

# Source private
if [ -f "${HOME}/dotfiles/bash/bash_private" ]; then
    source "${HOME}/dotfiles/bash/bash_private"
fi

# Bash history settings
shopt -s histappend
shopt -s cmdhist
export HISTFILE=$HOME/.history/bash_history
export HISTSIZE=10000
export HISTCONTROL=ignoreboth
export HISTTIMEFORMAT='%F %T '
export HISTIGNORE='ls:bg:fg:history'


# Add dir_colors
if command_exists dircolors; then
  eval $(dircolors $HOME/dotfiles/bash/dir_colors)
fi

# Add user defined dir to PATH
export PATH=$PATH:$HOME/opt/bin:$HOME/.local/bin:/usr/java/latest/bin:$HOME/.gem/ruby/2.2.0/bin:
export GOPATH=$HOME/go

# Set the default EDITOR
export EDITOR=vim


# Source git completion functions
if [ -f "${HOME}/dotfiles/bash/git-completion" ]; then
    source "${HOME}/dotfiles/bash/git-completion"
fi

# Source git prompt functions
if [ -f "${HOME}/dotfiles/bash/git-prompt" ]; then
    source "${HOME}/dotfiles/bash/git-prompt"
    # Set options for the git PS1
    export GIT_PS1_SHOWDIRTYSTATE=1
    export GIT_PS1_SHOWSTASHSTATE=1
    export GIT_PS1_SHOWUNTRACKEDFILES=1
    export GIT_PS1_SHOWCOLORHINTS=1
    export GIT_PS1_SHOWUPSTREAM=1
fi

# Aliases:
alias grep='grep --color=always'
alias sourceme='source ~/.bash_profile'
alias pcat='pygmentize -f terminal256 -O style=monokai -g'
alias cd=cd_func
alias mknote='touch $(date +%Y%m%d).note'
alias scavenge="free && sudo sh -c 'echo 3 >/proc/sys/vm/drop_caches' && free"
alias weechat-bitlbee="weechat -d ${HOME}/.weechat-xmpp"

# Special provisioning for ls++ aliasing
alias ls='ls -G'
if command_exists ls++; then
    alias ll='ls++ --potsf'
    alias lt='ls++ --potsf -tr'
    alias la='ls++ --potsf -a'
else
    alias la='ls -lah'
    alias ll='ls -lh'
    alias lt='ls -lhtr'
    alias ld='ls -lhd */'
fi
    
function __prompt_command() {
  local last_exit="$?"
  history -a
  # ANSI Escape codes:
  local ANSI_reset="\[\033[00m\]"
  local ANSI_white="\[\033[00;37m\]"
  local ANSI_light_blue="\[\033[00;34m\]"
  local ANSI_green="\[\033[00;32m\]"
  local ANSI_red="\[\033[00;31m\]"
  local ANSI_white_on_red="\[\033[00;37;41m\]"

  # Determine if we're connected via SSH to set host color in prompt
  if [[ -n $SSH_CONNECTION ]]; then
    local prompt_host="${ANSI_white_on_red}\h${ANSI_reset}"
  else
    local prompt_host="${ANSI_red}\h${ANSI_reset}"
  fi

  # Show the exit code of last command
  if [[ $last_exit -ne 0 ]]; then
    local prompt_status=" ${ANSI_white}[${ANSI_red} ✘ (${last_exit}) ${ANSI_white}] "
  else
    local prompt_status=" ${ANSI_white}[${ANSI_green} ✔ ${ANSI_white}] "
  fi

  # Build the prompt string:
  PS_TOP="${ANSI_light_blue}{ \w }${ANSI_reset}"
  PS_BOT="\n${ANSI_green}\u${ANSI_light_blue}@${prompt_host}${prompt_status}${ANSI_white}$ ${ANSI_reset}"
}

PROMPT_COMMAND='__prompt_command; __git_ps1 "$PS_TOP" "$PS_BOT"'

PATH="/Users/dstreby/perl5/bin${PATH+:}${PATH}"; export PATH;
PERL5LIB="/Users/dstreby/perl5/lib/perl5${PERL5LIB+:}${PERL5LIB}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/dstreby/perl5${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/dstreby/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/dstreby/perl5"; export PERL_MM_OPT;
